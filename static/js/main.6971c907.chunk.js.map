{"version":3,"sources":["components/QuestionCount.js","components/Question.js","api/quizQuestions.js","components/Quiz.js","api/TESTS.js","k_test_logo.png","components/Result.js","components/Loading.js","components/Intro.js","components/ResultToIntro.js","App.js","reportWebVitals.js","index.js"],"names":["QuestionCount","className","ProgressBar","now","this","props","quizCount","totalCount","variant","Component","Question","question","quizQuestions","answers","type","score","content","Quiz","state","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","qAndA","quizNum","_questions","i","nextQuizNum","push","Button","value","onClick","e","preventDefault","onChangeMode","target","setState","bind","size","arrayShuffler","renderAnswerOptions","range","start","stop","step","result","TESTS","info","mainTitle","subTitle","mainUrl","questions","results","desc","query","score_range","img_src","Result","_sharable_url","window","location","href","_current_url","split","_current_test","reverse","_current_result","mode","sharable_url","current_url","current_test","current_result","_onBackToStartButtonClick","current_tests_path","basename","path","component","test","exact","to","src","Logo","alt","resultRender","text","alert","final_type","final_desc","j","Card","bg","Img","Header","Body","Text","resultPageRender","introPageRender","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","options","height","width","Intro","quizNumber","counted_score","result_url","quiz_url","_onStartButtonClick","_mainTitle","_subTitle","bsPrefix","final_score","k","includes","_quizNum","_score","_mode","_scores","Number","setTimeout","final_score_query","resultCaculator","quizPageRender","ResultToIntro","test_main_url","defaultGuidePageRender","App","_all_tests_url","_all_tests_result_url","_final_render_routes","l","result_route","all_tests_url","all_tests_result_url","final_render_routes","map","item","replaceAll","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6971c907.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\n\nclass QuestionCount extends Component {\n    \n    render(){\n        return(\n            <div className=\"question-progress\">\n                <div className='progress-bar' >\n                    <ProgressBar now={this.props.quizCount / this.props.totalCount * 100} variant=\"danger\" />\n                </div>\n                <div className=\"question-count\">\n                    {this.props.quizCount+1} / {this.props.totalCount}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuestionCount;","import React, { Component } from 'react';\n\nclass Question extends Component {\n    render(){\n        return(\n            <div className=\"question\">\n                <h6 className=\"question-p\">{this.props.question}</h6>\n            </div>\n        );\n    }\n}\n\nexport default Question;","var quizQuestions = [\n    {\n        question: '\"00아 주말에 만날래?\" 주말에 만나자는 친구! \\n 하지만 이츠 쏘 매우 귀찮! 과연 당신의 답장은?',\n        answers:[\n            {\n                type: \"사자\",\n                score: 2,\n                content: '그래도 친구가 간만에 만나자는데 봐야지뭐, \\n \"어디서볼래?\"'\n            },\n            {\n                type: \"너구리\",\n                score: 5,\n                content: '귀찮지만 뭐하는 지에 따라 나갈지 말지 결정한다. \\n \"주말? 뭐하게?\"'\n            },\n            {\n                type: \"펭귄\",\n                score: 10,\n                content: '귀찮은건 No! 약속 있는 척 하고 집에서 쉬어야지. \\n \"나 이번주는 안되는데..약속 있어,,\"'\n            },\n        ],\n    },\n    {\n        question: \"나에게 소확행이란?\",\n        answers:[\n            {\n                type: \"사자\",\n                score: 2,\n                content: \"남자친구와 주말에 걸어다니면서 소소한 데이트하기\"\n            },\n            {\n                type: \"너구리\",\n                score: 5,\n                content: \"친구들이랑 다같이 모여서 캠핑이나 1박 여행을 간다.\"\n            },\n            {\n                type: \"펭귄\",\n                score: 10,\n                content: \"다 필요없어~행복이란 \\n '내침대에 따뜻한 전기장판과 부드러운 극세사 이불을 덮고 밀린 영화나 드라마를 귤을 까먹으면 보는 것'..\"\n            },\n        ]\n    },\n    {\n        question: \"아무런 약속이 없는 주말,,\\n 아침일찍 눈이 떠진 나 뭐할까?\",\n        answers:[\n            {\n                type: \"사자\",\n                score: 2,\n                content: \"밥먹고 샤워를 한 뒤 밀린 방 청소나 할일을 찾아 움직인다.\"\n            },\n            {\n                type: \"너구리\",\n                score: 5,\n                content: \"밥먹고 세수와 양치만 하고 쇼파에 앉아 티비를 본다.\"\n            },\n            {\n                type: \"펭귄\",\n                score: 10,\n                content: \"양치만 하고 누워서 넷플릭스나 왓챠를 켜본다.\"\n            },\n        ]\n    },\n    {\n        question: \"드디어 금요일~~~~\\n기다리던 주말이 다가온다! 뭐하지~~?\",\n        answers:[\n            {\n                type: \"사자\",\n                score: 2,\n                content: \"집에 있는 건 너무 심심해! \\n 친구들한테 만나자며 먼저 연락한다.\"\n            },\n            {\n                type: \"너구리\",\n                score: 5,\n                content: \"집에 있다가 만나자는 연락을 받으면 저녁에 슬슬 기어나간다.\"\n            },\n            {\n                type: \"펭귄\",\n                score: 10,\n                content: \"주말에..왜 약속을.. \\n 난 푹쉴랭! 굳이 먼저 약속을 따로 잡지 않는다.\"\n            },\n        ]\n    },\n    {\n        question: \"집에 있을 때 나의 모습은?\",\n        answers:[\n            {\n                type: \"사자\",\n                score: 2,\n                content: \"으 시간이 왤케 안가.. \\n 주변 친구들에게 연락해서 나갈 각잡기\"\n            },\n            {\n                type: \"너구리\",\n                score: 5,\n                content: \"낮엔 자고 밤에 나가야지~ \\n 8.9시쯤 나갈준비를 해본다.\"\n            },\n            {\n                type: \"펭귄\",\n                score: 10,\n                content: \"밀린 드라마나 영화가 너무 많아 시간이 짧다.\"\n            },\n        ]\n    },\n    {\n        question: \"배달 앱 속 나의 등급은?\",\n        answers:[\n            {\n                type: \"사자\",\n                score: 2,\n                content: \"배달은 별로, 난 맛집 탐방가임\"\n            },\n            {\n                type: \"너구리\",\n                score: 5,\n                content: \"그냥 가끔 집에 있거나 친구들이랑 파티할 때 시킴\"\n            },\n            {\n                type: \"펭귄\",\n                score: 10,\n                content: \"vip 이하로 떨어져본적이 없수다\"\n            },\n        ]\n    },\n    {\n        question: \"갑자기 일이생겨 못만난다고 하는 친구!\",\n        answers:[\n            {\n                type: \"사자\",\n                score: 2,\n                content: \"아,,어쩔 수 없지 하면서 바로 만날 친구에게 전화를 건다.\"\n            },\n            {\n                type: \"너구리\",\n                score: 5,\n                content: \"밖에 있으면 누구라도 나오겟지. \\n 카페나 pc방에서 친구들을 부른다.\"\n            },\n            {\n                type: \"펭귄\",\n                score: 10,\n                content: \"안타까워하는 척 하면서 집에서 쉴 생각에 기분이 좋아진다.\"\n            },\n        ]\n    },\n    {\n        question: \"집에만 있으니 심심한 당신!\\n생각에 빠지게 되는데...\",\n        answers:[\n            {\n                type: \"사자\",\n                score: 2,\n                content: \"휴 이렇게 집에만 있으니 좀 그렇다..\\n 라고 생각하며 당장 뭘 배워야할지 찾아보고 상담예약을 잡아본다.\"\n            },\n            {\n                type: \"너구리\",\n                score: 5,\n                content: \"당분간은 계속 집에 있어야하는데.. \\n 먹을 간식과 생필품을 구입한다.\"\n            },\n            {\n                type: \"펭귄\",\n                score: 10,\n                content: \"나는.. 아무생각이 없다. \\n 왜냐면 아무생각이 없기 때문이다.\"\n            },\n        ]\n    },\n    {\n        question: \"약속 시간 전 당신의 모습은?\",\n        answers:[\n            {\n                type: \"사자\",\n                score: 2,\n                content: \"옷은 전 날에 미리 골라놨으니 메이크업, 헤어 등 섬세하게 꾸민다\"\n            },\n            {\n                type: \"너구리\",\n                score: 5,\n                content: \"약속 2시간전 부터 일어나서 준비중이지만 세월아 네월아한다.\"\n            },\n            {\n                type: \"펭귄\",\n                score: 10,\n                content: \"아 귀찮다...나가지말까 \\n 하고 늘어져있다가 시간을 보고 재빨리 준비한다.\"\n            },\n        ]\n    },\n    {\n        question: \"친구들과의 약속이 있을때 나의 모습은?\",\n        answers:[\n            {\n                type: \"사자\",\n                score: 2,\n                content: \"10분 전에 미리 도착해 친구들을 기다린다.\"\n            },\n            {\n                type: \"너구리\",\n                score: 5,\n                content: \"조큼 늦는다고 친구들이 다 가있을때 그 장소로 간다.\"\n            },\n            {\n                type: \"펭귄\",\n                score: 10,\n                content: \"진짜 되도록 안나가지만 굳이 약속이 있다면 정각에 도착한다.\"\n            },\n        ]\n    },\n];\n\nexport default quizQuestions;","import React, { Component } from 'react';\nimport QuestionCount from './QuestionCount'\nimport Question from './Question'\nimport quizQuestions from '../api/quizQuestions'\nimport { Button } from 'react-bootstrap';\nimport { Fragment } from 'react';\n\nclass Quiz extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            quizCount:0,\n        }\n    }\n    // the function below is for option randomize\n    arrayShuffler(array){\n        var currentIndex = array.length, temporaryValue, randomIndex;\n          \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n        \n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n        \n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n        \n        return array;\n    }\n    renderAnswerOptions(){\n        var qAndA = null;\n        qAndA = this.props.qAndA[this.props.quizNum];\n        var _questions = [];\n        var i = 0;\n        var nextQuizNum = this.props.quizNum + 1;\n        while(i < qAndA.answers.length){\n            // random option push \n            _questions.push(\n                <Button\n                    key={this.props.quizNum-i}\n                    value={qAndA.answers[i].score} \n                    onClick={function(e) {\n                        e.preventDefault();\n                        if(this.props.quizNum === quizQuestions.length-1){\n                            this.props.onChangeMode(nextQuizNum, e.target.value, \"loading\"); //result\n                        } else {\n                            this.setState({\n                                quizCount:this.state.quizCount+1 // for Quiz Counting => QuestionCount.js\n                            })\n                            this.props.onChangeMode(nextQuizNum, e.target.value, \"quiz\");\n                        }\n                    }.bind(this)}\n                    variant=\"outline-dark\" \n                    size=\"lg\"\n                    className=\"option-btn\"\n                >{qAndA.answers[i].content}</Button>)\n            i = i + 1;\n        }\n        _questions = this.arrayShuffler(_questions)\n        return(\n            _questions\n        )\n    }\n    render(){\n        \n        return(\n            <div className=\"quiz\">\n                <Question question={this.props.qAndA[this.props.quizNum].question}></Question>\n                <div className=\"option-btn-div\">\n                    {this.renderAnswerOptions()}\n                </div>\n                <QuestionCount totalCount={this.props.qAndA.length} quizCount={this.state.quizCount}></QuestionCount>\n            </div>\n        );\n    }\n}\n\nexport default Quiz;","function range(start, stop, step) {\n    if (typeof stop == 'undefined') {\n        // one param defined\n        stop = start;\n        start = 0;\n    }\n\n    if (typeof step == 'undefined') {\n        step = 1;\n    }\n\n    if ((step > 0 && start >= stop) || (step < 0 && start <= stop)) {\n        return [];\n    }\n\n    var result = [];\n    for (var i = start; step > 0 ? i < stop : i > stop; i += step) {\n        result.push(i);\n    }\n\n    return result;\n};\n\nvar TESTS = [\n    // zipkok info test start\n    {\n        info : {\n            mainTitle:\"프로 집콕러 테스트\",\n            subTitle:\"이시국엔 집에 붙어 있자 꼭!\",\n            mainUrl:\"zipkok\"\n        },\n        questions:[\n            {\n                question: '\"00아 주말에 만날래?\" 주말에 만나자는 친구! \\n 하지만 이츠 쏘 매우 귀찮! 과연 당신의 답장은?',\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: '그래도 친구가 간만에 만나자는데 봐야지뭐, \\n \"어디서볼래?\"'\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: '귀찮지만 뭐하는 지에 따라 나갈지 말지 결정한다. \\n \"주말? 뭐하게?\"'\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: '귀찮은건 No! 약속 있는 척 하고 집에서 쉬어야지. \\n \"나 이번주는 안되는데..약속 있어,,\"'\n                    },\n                ],\n            },\n            {\n                question: \"나에게 소확행이란?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"남자친구와 주말에 걸어다니면서 소소한 데이트하기\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"친구들이랑 다같이 모여서 캠핑이나 1박 여행을 간다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"다 필요없어~행복이란 \\n '내침대에 따뜻한 전기장판과 부드러운 극세사 이불을 덮고 밀린 영화나 드라마를 귤을 까먹으면 보는 것'..\"\n                    },\n                ]\n            },\n            {\n                question: \"아무런 약속이 없는 주말,,\\n 아침일찍 눈이 떠진 나 뭐할까?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"밥먹고 샤워를 한 뒤 밀린 방 청소나 할일을 찾아 움직인다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"밥먹고 세수와 양치만 하고 쇼파에 앉아 티비를 본다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"양치만 하고 누워서 넷플릭스나 왓챠를 켜본다.\"\n                    },\n                ]\n            },\n            {\n                question: \"드디어 금요일~~~~\\n기다리던 주말이 다가온다! 뭐하지~~?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"집에 있는 건 너무 심심해! \\n 친구들한테 만나자며 먼저 연락한다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"집에 있다가 만나자는 연락을 받으면 저녁에 슬슬 기어나간다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"주말에..왜 약속을.. \\n 난 푹쉴랭! 굳이 먼저 약속을 따로 잡지 않는다.\"\n                    },\n                ]\n            },\n            {\n                question: \"집에 있을 때 나의 모습은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"으 시간이 왤케 안가.. \\n 주변 친구들에게 연락해서 나갈 각잡기\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"낮엔 자고 밤에 나가야지~ \\n 8.9시쯤 나갈준비를 해본다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"밀린 드라마나 영화가 너무 많아 시간이 짧다.\"\n                    },\n                ]\n            },\n            {\n                question: \"배달 앱 속 나의 등급은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"배달은 별로, 난 맛집 탐방가임\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"그냥 가끔 집에 있거나 친구들이랑 파티할 때 시킴\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"vip 이하로 떨어져본적이 없수다\"\n                    },\n                ]\n            },\n            {\n                question: \"갑자기 일이생겨 못만난다고 하는 친구!\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"아,,어쩔 수 없지 하면서 바로 만날 친구에게 전화를 건다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"밖에 있으면 누구라도 나오겟지. \\n 카페나 pc방에서 친구들을 부른다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"안타까워하는 척 하면서 집에서 쉴 생각에 기분이 좋아진다.\"\n                    },\n                ]\n            },\n            {\n                question: \"집에만 있으니 심심한 당신!\\n생각에 빠지게 되는데...\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"휴 이렇게 집에만 있으니 좀 그렇다..\\n 라고 생각하며 당장 뭘 배워야할지 찾아보고 상담예약을 잡아본다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"당분간은 계속 집에 있어야하는데.. \\n 먹을 간식과 생필품을 구입한다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"나는.. 아무생각이 없다. \\n 왜냐면 아무생각이 없기 때문이다.\"\n                    },\n                ]\n            },\n            {\n                question: \"약속 시간 전 당신의 모습은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"옷은 전 날에 미리 골라놨으니 메이크업, 헤어 등 섬세하게 꾸민다\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"약속 2시간전 부터 일어나서 준비중이지만 세월아 네월아한다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"아 귀찮다...나가지말까 \\n 하고 늘어져있다가 시간을 보고 재빨리 준비한다.\"\n                    },\n                ]\n            },\n            {\n                question: \"친구들과의 약속이 있을때 나의 모습은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"10분 전에 미리 도착해 친구들을 기다린다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"조큼 늦는다고 친구들이 다 가있을때 그 장소로 간다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"진짜 되도록 안나가지만 굳이 약속이 있다면 정각에 도착한다.\"\n                    },\n                ]\n            },\n        ],\n        results:[\n            {\n                type: \"Level 1. 초보 집콕러\",\n                desc: \"집에 있으면 있지만 심심하면 집 밖을 나가고 싶어하는 \\n 초보집콕러~ \\n 아직은 집이랑 서먹서먹한 42~ \\n 이틀이상 집에 있으면 나가고 싶어서 안달난 마치 라푼젤같은 그대! \\n 집에 있다가도 나오라면 바로 나오는 오케이맨~!\",\n                query: \"chqhwlqzhrfj\",\n                score_range:range(26),\n                img_src:'https://dl.dropboxusercontent.com/s/fkt02q4cy8onjr7/zipkok_chqhwlqzhrfj.png?dl=0'\n            },\n            {\n                type: \"Level 2. 선택형 집콕러\",\n                desc: \"주말엔 집에서 쉬는게 최고지만~~ \\n 날 만나고 싶다면 ~ 나가줘야지~~~~ 뭐할건데? \\n 꼭 재밌는 일이 있으면 무조건 튀어나가는 그대는 바로 \\n 선택형 집콕러! \\n 당신은 집에 있는 걸 좋아하지만 선택장애의 면모가 리를 빗 \\n 있기때문에 친구들의 설득과 흥미 딘딘한 일이 있으면 \\n 바로 집에서 튀어나가버리곤 하지~~\",\n                query: \"tjsxorgudwlqzhrfj\",\n                score_range:range(26, 51),\n                img_src:'https://dl.dropboxusercontent.com/s/m46a1ar0zsod71d/zipkok_tjsxorgudwlqzhrfj.png?dl=0'\n            },\n            {\n                type: \"Level 3. 돌연변이 집콕러\",\n                desc: \"극과극인 정말 집콕하고 싶을때 집에서 절대 나오지 않z...! \\n 하지만 어느순간 또 약속 줄줄 잡아 버리는 그대! \\n 성수기와 비성수기가 확실한 당신은 바로 \\n 돌연변이 집콕러! \\n 집에서도 밖에서도 최선을 다해 노는 당신! \\n 한번 놀고 나면 꼭 충분한 휴식이 필요하지~\",\n                query: \"ehfdusqusdlwlqzhrfj\",\n                score_range:range(51, 75),\n                img_src:'https://dl.dropboxusercontent.com/s/vwl7j0xc5rrueev/zipkok_ehfdusqusdlwlqzhrfj.png?dl=0'\n            },\n            {\n                type: \"Level 4. 프로 집콕러\",\n                desc: \"집이 곧 나의 삶의 전부일세, 당신은 바로 \\n 프로 집콕러~ \\n 집을 왜 나가~~ 집밖은 위험해~ \\n 주변에 아무리 불러도 순순히 나가지 않지!! 마치 나는 신비주의~!! \\n 하지만 그냥 나가기 귀찮은 사람 ^^ \\n 개인적인 시간은 필수! 집에서 나가는 것 조차 큰 결심이 필요해요~ \\n 집에 놀거리 가득하면 집 밖에 더더욱 안나갈 자신이 있어~~~~~\",\n                query: \"vmfhwlqzhrfj\",\n                score_range:range(76, 101),\n                img_src:'https://dl.dropboxusercontent.com/s/6jwrj44gjfi3g5g/zipkok_vmfhwlqzhrfj.png?dl=0'\n            },\n        ]\n    },\n    {\n        info : {\n            mainTitle:\"도도리 테스트\",\n            subTitle:\"이건 도도리야!\",\n            mainUrl:\"dodori\"\n        },\n        questions:[\n            {\n                question: '\"00아 주말에 만날래?\" 주말에 만나자는 친구! \\n 하지만 이츠 쏘 매우 귀찮! 과연 당신의 답장은?',\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: '그래도 친구가 간만에 만나자는데 봐야지뭐, \\n \"어디서볼래?\"'\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: '귀찮지만 뭐하는 지에 따라 나갈지 말지 결정한다. \\n \"주말? 뭐하게?\"'\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: '귀찮은건 No! 약속 있는 척 하고 집에서 쉬어야지. \\n \"나 이번주는 안되는데..약속 있어,,\"'\n                    },\n                ],\n            },\n            {\n                question: \"나에게 소확행이란?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"남자친구와 주말에 걸어다니면서 소소한 데이트하기\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"친구들이랑 다같이 모여서 캠핑이나 1박 여행을 간다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"다 필요없어~행복이란 \\n '내침대에 따뜻한 전기장판과 부드러운 극세사 이불을 덮고 밀린 영화나 드라마를 귤을 까먹으면 보는 것'..\"\n                    },\n                ]\n            },\n            {\n                question: \"아무런 약속이 없는 주말,,\\n 아침일찍 눈이 떠진 나 뭐할까?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"밥먹고 샤워를 한 뒤 밀린 방 청소나 할일을 찾아 움직인다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"밥먹고 세수와 양치만 하고 쇼파에 앉아 티비를 본다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"양치만 하고 누워서 넷플릭스나 왓챠를 켜본다.\"\n                    },\n                ]\n            },\n            {\n                question: \"드디어 금요일~~~~\\n기다리던 주말이 다가온다! 뭐하지~~?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"집에 있는 건 너무 심심해! \\n 친구들한테 만나자며 먼저 연락한다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"집에 있다가 만나자는 연락을 받으면 저녁에 슬슬 기어나간다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"주말에..왜 약속을.. \\n 난 푹쉴랭! 굳이 먼저 약속을 따로 잡지 않는다.\"\n                    },\n                ]\n            },\n            {\n                question: \"집에 있을 때 나의 모습은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"으 시간이 왤케 안가.. \\n 주변 친구들에게 연락해서 나갈 각잡기\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"낮엔 자고 밤에 나가야지~ \\n 8.9시쯤 나갈준비를 해본다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"밀린 드라마나 영화가 너무 많아 시간이 짧다.\"\n                    },\n                ]\n            },\n            {\n                question: \"배달 앱 속 나의 등급은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"배달은 별로, 난 맛집 탐방가임\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"그냥 가끔 집에 있거나 친구들이랑 파티할 때 시킴\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"vip 이하로 떨어져본적이 없수다\"\n                    },\n                ]\n            },\n            {\n                question: \"갑자기 일이생겨 못만난다고 하는 친구!\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"아,,어쩔 수 없지 하면서 바로 만날 친구에게 전화를 건다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"밖에 있으면 누구라도 나오겟지. \\n 카페나 pc방에서 친구들을 부른다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"안타까워하는 척 하면서 집에서 쉴 생각에 기분이 좋아진다.\"\n                    },\n                ]\n            },\n            {\n                question: \"집에만 있으니 심심한 당신!\\n생각에 빠지게 되는데...\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"휴 이렇게 집에만 있으니 좀 그렇다..\\n 라고 생각하며 당장 뭘 배워야할지 찾아보고 상담예약을 잡아본다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"당분간은 계속 집에 있어야하는데.. \\n 먹을 간식과 생필품을 구입한다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"나는.. 아무생각이 없다. \\n 왜냐면 아무생각이 없기 때문이다.\"\n                    },\n                ]\n            },\n            {\n                question: \"약속 시간 전 당신의 모습은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"옷은 전 날에 미리 골라놨으니 메이크업, 헤어 등 섬세하게 꾸민다\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"약속 2시간전 부터 일어나서 준비중이지만 세월아 네월아한다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"아 귀찮다...나가지말까 \\n 하고 늘어져있다가 시간을 보고 재빨리 준비한다.\"\n                    },\n                ]\n            },\n            {\n                question: \"친구들과의 약속이 있을때 나의 모습은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"10분 전에 미리 도착해 친구들을 기다린다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"조큼 늦는다고 친구들이 다 가있을때 그 장소로 간다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"진짜 되도록 안나가지만 굳이 약속이 있다면 정각에 도착한다.\"\n                    },\n                ]\n            },\n        ],\n        results:[\n            {\n                type: \"Level 1. 초보 집콕러\",\n                desc: \"집에 있으면 있지만 심심하면 집 밖을 나가고 싶어하는 \\n 초보집콕러~ \\n 아직은 집이랑 서먹서먹한 42~ \\n 이틀이상 집에 있으면 나가고 싶어서 안달난 마치 라푼젤같은 그대! \\n 집에 있다가도 나오라면 바로 나오는 오케이맨~!\",\n                query: \"1chqhwlqzhrfj\",\n                score_range:range(26),\n                img_src:'https://dl.dropboxusercontent.com/s/fkt02q4cy8onjr7/zipkok_chqhwlqzhrfj.png?dl=0'\n            },\n            {\n                type: \"Level 2. 선택형 집콕러\",\n                desc: \"주말엔 집에서 쉬는게 최고지만~~ \\n 날 만나고 싶다면 ~ 나가줘야지~~~~ 뭐할건데? \\n 꼭 재밌는 일이 있으면 무조건 튀어나가는 그대는 바로 \\n 선택형 집콕러! \\n 당신은 집에 있는 걸 좋아하지만 선택장애의 면모가 리를 빗 \\n 있기때문에 친구들의 설득과 흥미 딘딘한 일이 있으면 \\n 바로 집에서 튀어나가버리곤 하지~~\",\n                query: \"2tjsxorgudwlqzhrfj\",\n                score_range:range(26, 51),\n                img_src:'https://dl.dropboxusercontent.com/s/m46a1ar0zsod71d/zipkok_tjsxorgudwlqzhrfj.png?dl=0'\n            },\n            {\n                type: \"Level 3. 돌연변이 집콕러\",\n                desc: \"극과극인 정말 집콕하고 싶을때 집에서 절대 나오지 않z...! \\n 하지만 어느순간 또 약속 줄줄 잡아 버리는 그대! \\n 성수기와 비성수기가 확실한 당신은 바로 \\n 돌연변이 집콕러! \\n 집에서도 밖에서도 최선을 다해 노는 당신! \\n 한번 놀고 나면 꼭 충분한 휴식이 필요하지~\",\n                query: \"3ehfdusqusdlwlqzhrfj\",\n                score_range:range(51, 75),\n                img_src:'https://dl.dropboxusercontent.com/s/vwl7j0xc5rrueev/zipkok_ehfdusqusdlwlqzhrfj.png?dl=0'\n            },\n            {\n                type: \"Level 4. 프로 집콕러\",\n                desc: \"집이 곧 나의 삶의 전부일세, 당신은 바로 \\n 프로 집콕러~ \\n 집을 왜 나가~~ 집밖은 위험해~ \\n 주변에 아무리 불러도 순순히 나가지 않지!! 마치 나는 신비주의~!! \\n 하지만 그냥 나가기 귀찮은 사람 ^^ \\n 개인적인 시간은 필수! 집에서 나가는 것 조차 큰 결심이 필요해요~ \\n 집에 놀거리 가득하면 집 밖에 더더욱 안나갈 자신이 있어~~~~~\",\n                query: \"4vmfhwlqzhrfj\",\n                score_range:range(76, 101),\n                img_src:'https://dl.dropboxusercontent.com/s/6jwrj44gjfi3g5g/zipkok_vmfhwlqzhrfj.png?dl=0'\n            },\n        ]\n    },\n]\n\nexport default TESTS;\n","export default __webpack_public_path__ + \"static/media/k_test_logo.7d0fe144.png\";","import React, { Component, Fragment } from 'react';\nimport Intro from './Intro'\nimport TESTS from '../api/TESTS'\nimport { BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport Logo from '../k_test_logo.png'\n\nimport { Button, Card } from 'react-bootstrap';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nclass Result extends Component {\n    constructor(props){\n        super(props)\n        const _sharable_url = window.location.href;\n        const _current_url = _sharable_url.split('/')\n        const _current_test = _current_url.reverse()[2]\n        const _current_result = _current_url[0]\n        this.state = {\n            mode:\"result\",\n            sharable_url:_sharable_url,\n            current_url:_current_url,\n            current_test:_current_test,\n            current_result:_current_result\n        }\n        this._onBackToStartButtonClick = this._onBackToStartButtonClick.bind(this)\n    }\n    _onBackToStartButtonClick(){\n        this.setState({\n            mode:\"intro\"\n        })\n    }\n    introPageRender(){\n\n        const current_tests_path = '/' + this.state.current_test + '/';\n        return(\n            <Router basename=\"/personality_test_app\"> \n                <Switch>\n                    <Route path={current_tests_path} component={()=><Intro test={this.state.current_test}/>} exact/>\n                    <Redirect to={current_tests_path} />\n                </Switch>\n            </Router>\n        )\n    }\n\n    resultPageRender(){\n        return(\n            <div className=\"result\">\n                <div className=\"result-header\">\n                    <img src={Logo} className=\"result-logo-image\" alt=\"result_img\"/>\n                    <h5 className=\"result-title\">당신의 성향은</h5>\n                    <div className=\"result-value\">\n                        {this.resultRender()}\n                    </div>\n                </div>\n                <div className=\"share\">\n                    <h5 className=\"share-title\">친구에게 공유하기</h5>\n                    <div className=\"share-btn\">\n                        <CopyToClipboard text={this.state.sharable_url}>\n                            <Button \n                                variant=\"dark\"\n                                onClick={function(){alert(\"링크가 복사됐어요!\")}}>링크 복사</Button>\n                        </CopyToClipboard>\n                    </div>\n                    <div className=\"re-test-btn\">\n                        <Button onClick={this._onBackToStartButtonClick} className=\"retest-btn\" variant=\"dark\">테스트 다시하기</Button>\n                    </div>\n                </div>\n                <div className=\"intro-footer\">\n                    <p>MAKER - 케이테스트</p>\n                </div>\n            </div>\n            \n        );\n    }\n\n\n    resultRender(){\n        // searching the result content by current url path\n\n        let final_type = ''\n        let final_desc = ''\n        let img_src = ''\n        let i = 0;\n        while(i<TESTS.length){\n            if(TESTS[i].info.mainUrl === this.state.current_test){\n                let j = 0;\n                while(j<TESTS[i].results.length){\n                    if(TESTS[i].results[j].query === this.state.current_result){\n                        final_type = TESTS[i].results[j].type\n                        final_desc = TESTS[i].results[j].desc\n                        img_src = TESTS[i].results[j].img_src\n                        break\n                    }\n                    j = j + 1;\n                }\n                // break\n            }\n            i = i + 1;\n        }\n\n        // return final result option\n        return (\n            <Fragment>\n                <Card className=\"result-card\" bg=\"light\">\n                    <Card.Img variant='top' src={img_src} className='result-img'/>\n                    <Card.Header className=\"result-header\">\n                        {final_type}\n                    </Card.Header>\n                    <Card.Body className=\"result-p\">\n                        <Card.Text>{final_desc}</Card.Text>\n                    </Card.Body>\n                </Card>\n            </Fragment>\n                \n        )\n    }\n    render(){\n        return(\n            <div>\n                {this.state.mode === \"result\" ? this.resultPageRender() : this.introPageRender()}\n            </div>\n        );\n    }\n}\n\nexport default Result;","import React, { Component } from 'react';\nimport Lottie from 'react-lottie';\nimport * as loading from '../loading-animation.json'\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true, \n    animationData: loading.default,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n\nclass Loading extends Component {\n    render(){\n        return(\n            <div className=\"loading\" >\n                <Lottie options={defaultOptions} height={120} width={120}/>\n            </div>\n        )\n    }\n}\n\nexport default Loading;\n\n// https://github.com/chenqingspring/react-lottie","import React, { Component, Fragment } from 'react';\nimport Quiz from './Quiz'\nimport Result from './Result'\nimport Loading from './Loading'\nimport TESTS from '../api/TESTS'\nimport Logo from '../k_test_logo.png'\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Typist from 'react-typist';\n\nclass Intro extends Component {\n    constructor(props){\n        super(props)\n        let _current_test = [];\n        let i = 0;\n        while (i<TESTS.length) {\n            if(TESTS[i].info.mainUrl === this.props.test){\n                _current_test = TESTS[i]\n                break\n            }\n            i = i + 1\n        }\n        // create answer option object for counting each question's answer\n        // var answer_obj = {};\n        // var j = 0;\n        // for(j=0;j<quizQuestions[0].answers.length;j++) {\n        // answer_obj[quizQuestions[0].answers[j].type] = 0;\n        // };\n        this.state = {\n            mode:'intro',\n            current_test:_current_test,\n            qAndA:_current_test.questions,\n            quizNumber:0,\n            counted_score:0, // < ------------- for calculating scores\n            result_url:'/result/',\n            quiz_url:window.location.href,\n        }\n        this._onStartButtonClick = this._onStartButtonClick.bind(this);\n    }\n\n    _onStartButtonClick(){\n        this.setState({\n            mode:'quiz'\n        })\n    }\n\n    introPageRender(){\n        let _mainTitle = this.state.current_test.info.mainTitle;\n        let _subTitle = this.state.current_test.info.subTitle;\n        \n        return (\n            <div className=\"intro container\">\n                <img className='logo-img' src={Logo} alt=\"rea\"/>\n                <h1 className='title'>{_mainTitle}</h1>  \n                <h5 className='sub-title'>{_subTitle}</h5>\n                <div className='btn-positioner'></div>\n                <Typist className=\"start-btn-participants\">\n                    현재 총 1,402,052명이 참여했어요.\n                </Typist>\n                <div className=\"start-btn-div\">\n                    <Button\n                        onClick={this._onStartButtonClick}\n                        variant=\"dark\"\n                        size=\"lg\"\n                        className=\"start-btn\"\n                        bsPrefix=\"btn\"\n                    >시작하기\n                    </Button>\n                </div>\n                <div className=\"intro-footer\">\n                    <p>MAKER - 케이테스트</p>\n                </div>\n            </div>\n        );\n    }\n\n    resultCaculator(){\n        let final_score = this.state.counted_score;\n        for (let k = 0; k < this.state.current_test.results.length; k++){\n            if(this.state.current_test.results[k].score_range.includes(final_score)){\n                return this.state.current_test.results[k];\n            }\n        }\n    }\n    quizPageRender(){\n        if(this.state.mode === \"quiz\"){\n            let _page = <Quiz\n            qAndA={this.state.qAndA}\n            quizNum={this.state.quizNumber}\n            onChangeMode={\n                function(_quizNum, _score, _mode) {\n                // e.preventDefault();\n                // <below for counting answers with TYPE(사자 너구리 펭귄 etc.)>\n                // var _answers = Object.assign({}, this.state.answers);\n                // _answers[_answer] = _answers[_answer] + 1;\n                let _scores = this.state.counted_score + Number(_score)\n                this.setState({\n                    quizNumber:_quizNum,\n                    // answers:_answers, <----- for counting answers with TYPE\n                    counted_score:_scores,\n                    mode:_mode\n                })\n            }.bind(this)}></Quiz>\n            return _page\n        } else if(this.state.mode === \"loading\"){\n            return(\n                <div className=\"loading-upper\">\n                    <Loading />\n                    {setTimeout(function(){\n                        this.setState({mode:\"result\"})\n                    }.bind(this), 2700)}\n                </div>\n            )\n        } else if(this.state.mode === \"result\"){\n            // go to result page\n            let result_contents = this.resultCaculator();\n            let final_score_query = result_contents.query // <----------------query export\n            \n            return(\n\n                <Router basename={\"/personality_test_app/\"+this.state.current_test.info.mainUrl}>\n                    <Route path={this.state.result_url+final_score_query} component={Result}/>\n                    <Redirect to={this.state.result_url+final_score_query} />\n                    {/* <Result result={result_contents}/> */}\n                </Router>\n                    // Router doesn't work in github page\n                    // <Router basename={this.state.quiz_url}>\n                    //     <Switch>\n                            \n                    //         <Route\n                    //             path={this.state.result_url} // this.props.location.pathname + \n                    //             component={() => <Result answers={this.state.answers}/>\n                    //         } exact/>\n                    //         <Redirect to={this.state.result_url} />\n                    //     </Switch>\n                    // </Router>\n\n            )   \n        }\n    }\n    \n    render(){\n        return (\n            <Fragment>\n                {this.state.mode === \"intro\" ? this.introPageRender() : this.quizPageRender()}\n            </Fragment>\n        );\n    }\n}\n\nexport default Intro;","import React, { Component } from 'react';\nimport Intro from './Intro'\nimport { BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nclass ResultToIntro extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            mode:\"result\",\n            test_main_url:'/relationtype/',\n        }\n        this._onBackToStartButtonClick = this._onBackToStartButtonClick.bind(this)\n    }\n    _onBackToStartButtonClick(){\n        this.setState({\n            mode:\"intro\"\n        })\n    }\n    introPageRender(){\n        return(\n            <Router basename=\"/personality_test_app/\">\n                <Switch>\n                    <Route path={this.state.test_main_url} component={Intro} exact/>\n                    <Redirect to={this.state.test_main_url} />\n                </Switch>\n            </Router>\n        )\n    }\n    defaultGuidePageRender(){\n        return(\n            <div className='guide-div'>\n                <div className=\"guide-desc\">\n                    아래 버튼을 눌러 연애 심리 테스트를 해보세요!\n                </div>\n                <div className=\"guide-re-test-btn\">\n                    <Button onClick={this._onBackToStartButtonClick} className=\"retest-btn\" variant=\"dark\">테스트 다시하기</Button>\n                </div>\n            </div>\n            \n        )\n    }\n    render(){\n        return(\n            <div>\n                {this.state.mode === 'result' ? this.defaultGuidePageRender() : this.introPageRender()}\n            </div>\n        )\n    }\n}\n\nexport default ResultToIntro;","import React, { Component, Fragment } from 'react';\nimport Intro from './components/Intro'\nimport ResultToIntro from './components/ResultToIntro'\nimport TESTS from './api/TESTS'\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Result from './components/Result';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    let i = 0;\n    let _all_tests_url = [];\n    while (i<TESTS.length) {\n      _all_tests_url.push('/'+TESTS[i].info.mainUrl+'/')\n      i = i + 1;\n    }\n    let j = 0;\n    let _all_tests_result_url = [];\n    while (j<_all_tests_url.length){\n      _all_tests_result_url.push(_all_tests_url[j]+'result/')\n      j = j + 1;\n    }\n    let _final_render_routes = [];\n    var k = 0;\n    \n    while(k<TESTS.length){\n      var l=  0;\n      while(l<TESTS[k].results.length){\n        _final_render_routes.push([TESTS[k].results[l].query, TESTS[k].info.mainUrl])\n        l = l + 1;\n      }\n      k = k + 1;\n    }\n    this.state = {\n      result_route:'result/',\n      all_tests_url:_all_tests_url,\n      all_tests_result_url:_all_tests_result_url,\n      final_render_routes:_final_render_routes,\n    }\n  }\n\n  render() {\n    return(\n    <Fragment>\n      <Router basename=\"/personality_test_app/\">\n        <Switch>\n\n          {/* go to \"Intro\" page */}\n          {this.state.all_tests_url.map((item)=>(\n            <Route\n              path={item}\n              component={() => <Intro test={item.replaceAll('/','')}/>}\n              key={item.replaceAll('/','')}\n              exact\n            />\n          ))}\n          {/* go to \"Result to Start\" page */}\n          <Route path={this.state.all_tests_result_url} component={ResultToIntro} exact/>\n          {/* go to \"Each Result contents\" page */}\n          {this.state.final_render_routes.map((item)=>(\n            <Route\n              path={'/'+item[1]+'/'+this.state.result_route+item[0]}\n              component={Result}\n              key={item[1]+'_'+item[0]} />\n          ))}\n          {/* {quizResults.map((item, index) => (\n            <Route\n              path={this.state.test_main_url + this.state.result_route + item.query}\n              component={() => <Result result={item}/>}\n              key={index} exact/>\n          ))} */}\n        </Switch>\n      </Router>\n    </Fragment>\n    )\n  }\n  \n}\n\n\nexport default App;\n\n// https://stackoverflow.com/questions/50644602/how-to-share-current-url-in-reactjs\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}